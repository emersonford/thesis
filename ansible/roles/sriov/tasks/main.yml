---
- name: Check IOMMU status
  shell: "grep '{{ iommu_str }}' /etc/default/grub"
  register: iommu_status
  changed_when: false
  failed_when: false
  vars:
    iommu_str: "{{ 'amd_iommu=on iommu=pt' if ('AuthenticAMD' in ansible_facts['processor']) else 'intel_iommu=on' }}"

- name: Enable IOMMU
  shell: "sed -i '0,/GRUB_CMDLINE_LINUX=\".*\"/s/\\(GRUB_CMDLINE_LINUX=\".*\\)\"/\\1 {{ iommu_str }}\"/' /etc/default/grub && update-grub"
  vars:
    iommu_str: "{{ 'amd_iommu=on iommu=pt' if ('AuthenticAMD' in ansible_facts['processor']) else 'intel_iommu=on' }}"
  when: "iommu_status.rc != 0"
  notify:
    - Reboot host

- name: Force all handlers to run
  meta: flush_handlers

- name: Check MST status
  shell: 'mst status | grep "MST PCI configuration module loaded"'
  register: mst_status
  failed_when: False
  changed_when: "mst_status.rc != 0"
  notify:
    - Start MST

- name: Force all handlers to run
  meta: flush_handlers

- name: Get MLNX device from MST device
  shell: "mst status -v | grep {{ sriov_parent_device }} | awk '{print $2}'"
  register: mst_device
  changed_when: false

- name: Get SRIOV_EN status
  shell: "mlxconfig -d {{ mst_device.stdout }} q | grep SRIOV_EN | awk '{print $2}'"
  register: sriov_status
  changed_when: false

- name: Get NUM_OF_VFS status
  shell: "mlxconfig -d {{ mst_device.stdout }} q | grep NUM_OF_VFS | awk '{print $2}'"
  register: num_of_vfs_status
  changed_when: false

- name: Change SRIOV status
  shell: "mlxconfig -y -d {{ mst_device.stdout }} set SRIOV_EN=1 NUM_OF_VFS={{ NUM_OF_VFS }}"
  when: ('True' not in sriov_status.stdout or num_of_vfs_status.stdout | int != NUM_OF_VFS | int)
  notify:
    - Reboot host

- name: Force all handlers to run
  meta: flush_handlers

- name: Configure VFs
  include_tasks:
    file: configure_vfs.yml
  when: "configure_sriov_ifs | bool"
